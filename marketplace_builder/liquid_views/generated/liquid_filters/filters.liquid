<div>
  <div id="instance_method_details" class="method_details_list">
    
      <div class="method_details first">
  {% raw %}
    <h3 class="signature first" id="add_to_array-instance_method">
  
    #<strong>add_to_array</strong>(array, item)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns array to which we add the item given as the second parameter</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array to which we add a new element</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>item</span>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>item we add to the array</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array to which we add the item given as the second parameter</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="add_to_date-instance_method">
  
    #<strong>add_to_date</strong>(date, number_of_days)  &#x21d2; <tt>Date</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns input date/time to which the number_of_days days have been added;
use negative values to obtain a date in the past</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>date</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>date to which we add number_of_days</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>number_of_days</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>number of days to add to the input date</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Date</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input date/time to which the number_of_days days have been added; use
negative values to obtain a date in the past</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="any-instance_method">
  
    #<strong>any</strong>(arr = [], query = &#39;true&#39;)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns checks if given array contains at least one queried string/number</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>arr</span>
      
      
        <span class='type'>(<tt>Array</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>[]</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>array to search through</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>query</span>
      
      
        <span class='type'>(<tt>String</tt>, <tt>Number</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;true&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>String/Number compared to each item in the given array</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>checks if given array contains at least one queried string/number</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="asset_url-instance_method">
  
    #<strong>asset_url</strong>(file_path, **_options)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns url to the physical file if existing, root asset url otherwise</p>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>valid/file.jpg -&gt; https://cdn.com/valid/file.jpg
non_existing_file.jpg -&gt; https://cdn.com</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>file_path</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>url to the physical file if existing, root asset url otherwise</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="compact-instance_method">
  
    #<strong>compact</strong>(array)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns array from which blank values are removed</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array without blank values</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array from which blank values are removed</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="date_before-instance_method">
  
    #<strong>date_before</strong>(first_date, second_date)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns true if first date is lower than second date</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>first_date</span>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>time which will be compared to the second one</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>second_date</span>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>second time, against which we will do comparison</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns true if first date is lower than second date</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="detect-instance_method">
  
    #<strong>detect</strong>(objects, conditions = {})  &#x21d2; <tt>Object</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns with first object from collection that matches provided conditions</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>objects</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>conditions</span>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>{}</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>hash with conditions { field_name: value }</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>with first object from collection that matches provided conditions</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="escape_javascript-instance_method">
  
    #<strong>escape_javascript</strong>(text)  &#x21d2; <tt>Object</tt> 
  

  

  
</h3>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="expand_url_template-instance_method">
  
    #<strong>expand_url_template</strong>(template, params)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns url</p>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>/search/{city}/{street} + { city: Sydney, street: &#39;BlueRoad&#39;} produces
/search/Sydney/BlueRoad</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>template</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><ul><li>
<p>url template</p>
</li></ul>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>params</span>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'><ul><li>
<p>url data</p>
</li></ul>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>url</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="extract_url_params-instance_method">
  
    #<strong>extract_url_params</strong>(url, templates)  &#x21d2; <tt>Hash</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns params</p>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>/search/Sydney/BlueRoad + /search/{city}/{street}
returns { city: Sydney, street: &#39;BlueRoad&#39;}</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>url</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
    </li>
  
    <li>
      
        <span class='name'>templates</span>
      
      
        <span class='type'>(<tt>Array&lt;String&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>url templates array</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>params</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="fetch-instance_method">
  
    #<strong>fetch</strong>(hash, key)  &#x21d2; <tt>Object</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    

  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>{{ users | first | fetch: &quot;name&quot;}}</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>hash</span>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
      
    </li>
  
    <li>
      
        <span class='name'>key</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="filter_text-instance_method">
  
    #<strong>filter_text</strong>(text = &#39;&#39;)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns filtered version of the input text using the marketplace global
text filters</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>text to be filtered</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>filtered version of the input text using the marketplace global text
filters</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="flatten-instance_method">
  
    #<strong>flatten</strong>(array)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns with objects</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Array&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of arrays to be processed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>with objects</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="group_by-instance_method">
  
    #<strong>group_by</strong>(objects, method_name)  &#x21d2; <tt>Hash&lt;MethodResult =&gt; Array&lt;Object&gt;&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns the original array grouped by method specified by the second
parameter</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>objects</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array to be grouped</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>method_name</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>method name to be used to group Objects</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Hash&lt;MethodResult =&gt; Array&lt;Object&gt;&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>the original array grouped by method specified by the second parameter</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="html_safe-instance_method">
  
    #<strong>html_safe</strong>(text)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns string that can be rendered with all html tags by default all
variables are striped from danger html tags</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns string that can be rendered with all html tags by default all
variables are striped from danger html tags</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="humanize-instance_method">
  
    #<strong>humanize</strong>(key)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a human readable string derived from the input; capitalizes the
first word, turns underscores into spaces, and strips a trailing
&#39;_id&#39; if present. Meant for creating pretty output.</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>key</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input string to be transformed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a human readable string derived from the input; capitalizes the first word,
turns underscores into spaces, and strips a trailing &#39;_id&#39; if
present. Meant for creating pretty output.</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="in_groups_of-instance_method">
  
    #<strong>in_groups_of</strong>(array, integer)  &#x21d2; <tt>Array&lt;Array&lt;Object&gt;&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns the original array split into groups having the size specified by
the second parameter (an array of arrays)</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array to be split into groups</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>integer</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>the size of each group the array is to be split into</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Array&lt;Object&gt;&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>the original array split into groups having the size specified by the
second parameter (an array of arrays)</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="intersection-instance_method">
  
    #<strong>intersection</strong>(array, other_array)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns that exists in both arrays</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>other_array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>that exists in both arrays</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="is_date_in_past-instance_method">
  
    #<strong>is_date_in_past</strong>(date)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns true if date passed is in the past, false otherwise</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>date</span>
      
      
        <span class='type'>(<tt>Date</tt>)</span>
      
      
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>true if date passed is in the past, false otherwise</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="is_included_in_array-instance_method">
  
    #<strong>is_included_in_array</strong>(array, el)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns whether the array includes the element given</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of elements where we look into</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>el</span>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>we will look for this element inside the array</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>whether the array includes the element given</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="is_token_valid-instance_method">
  
    #<strong>is_token_valid</strong>(token, user_id)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>false otherwise</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>token</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>encrypted token generated via temporary_token graphql property</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>user_id</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>id of the user who generated token</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns true if the token has not expired and was generated for given user</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="json-instance_method">
  
    #<strong>json</strong>(object)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns JSON formatted string containing a representation of object</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>object</span>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>object we want a JSON representation of</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>JSON formatted string containing a representation of object</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="localize-instance_method">
  
    #<strong>localize</strong>(datetime, format = &#39;long&#39;)  &#x21d2; <tt>String</tt><sup>?</sup> 
  

  
    <span class="aliases">Also known as:
    <span class="names"><span id='l-instance_method'>l</span></span>
    </span>
  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns formatted representation of the passed in DateTime object</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>datetime</span>
      
      
        <span class='type'>(<tt>String</tt>, <tt>DateTime</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>DateTime object to be formatted; can be a string and it will be converted
to a date</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>format</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;long&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>the format to be used for formatting the date; default is &#39;long&#39;;
other values can be used: they are taken from translations, keys are of the
form &#39;time.formats.#{format_name}&#39;</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>, <tt>nil</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>formatted representation of the passed in DateTime object</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="map-instance_method">
  
    #<strong>map</strong>(object, method)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns array of objects obtained from the original array of objects
(passed in as the object parameter) by calling the method &#39;method&#39;
on each object in the original array</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>object</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>method</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>method name to be called on each of the objects in the passed in array of
objects</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects obtained from the original array of objects (passed in as
the object parameter) by calling the method &#39;method&#39; on each object
in the original array</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="map_attributes-instance_method">
  
    #<strong>map_attributes</strong>(array, *attributes)  &#x21d2; <tt>Array&lt;Array&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns array of arrays with values for given keys</p>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>items =&gt; [{id: 1, name: &#39;foo&#39;, label: &#39;Foo&#39;}, {id: 2, name: &#39;bar&#39;, label: &#39;Bar&#39;}]
{{ items | map_attributes: &#39;id&#39;, &#39;name&#39; }} =&gt; [[1, &#39;foo&#39;], [2, &#39;bar&#39;]]</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>attributes</span>
      
      
        <span class='type'>(<tt>Array&lt;String&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of keys to be extracted</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Array&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of arrays with values for given keys</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="markdownify-instance_method">
  
    #<strong>markdownify</strong>(text)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns processed text with markdown syntax changed to HTML</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>text using markdown syntax</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>processed text with markdown syntax changed to HTML</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="matches-instance_method">
  
    #<strong>matches</strong>(text, regexp)  &#x21d2; <tt>Boolean</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns whether the given string matches the given regular expression</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string we check against the regular expression</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>regexp</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string representing a regular expression pattern against which we try to
match the first parameter</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Boolean</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>whether the given string matches the given regular expression</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="new_line_to_br-instance_method">
  
    #<strong>new_line_to_br</strong>(html = &#39;&#39;)  &#x21d2; <tt>String</tt> 
  

  
    <span class="aliases">Also known as:
    <span class="names"><span id='nl2br-instance_method'>nl2br</span></span>
    </span>
  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns replaces newlines in the input string with the &lt;br /&gt; HTML
tag</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>html</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>HTML string to be processed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>replaces newlines in the input string with the &lt;br /&gt; HTML tag</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="pad_left-instance_method">
  
    #<strong>pad_left</strong>(str, count, symbol = &#39; &#39;)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns string padded from left to length of count with symbol character</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>str</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string to pad</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>count</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>minimum length of output string</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>symbol</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39; &#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>string to pad with</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns string padded from left to length of count with symbol character</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="parameterize-instance_method">
  
    #<strong>parameterize</strong>(text, separator = &#39;-&#39;)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns replaces special characters in a string so that it may be used as
part of a &#39;pretty&#39; URL; the default separator used is &#39;-&#39;;
e.g. &#39;John arrived_foo&#39; becomes &#39;john-arrived_foo&#39;</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input string to be &#39;parameterized&#39;</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>separator</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;-&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>string to be used as separator in the output string; default is &#39;-&#39;</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>replaces special characters in a string so that it may be used as part of a
&#39;pretty&#39; URL; the default separator used is &#39;-&#39;; e.g.
&#39;John arrived_foo&#39; becomes &#39;john-arrived_foo&#39;</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="parse_time-instance_method">
  
    #<strong>parse_time</strong>(time, format = nil)  &#x21d2; <tt>Time</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a time object created from parsing the string representation of
time given as input</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>time</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a string representation of time for example &#39;today&#39;, &#39;3 days
ago&#39; etc.</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a time object created from parsing the string representation of time given
as input</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="parse_time_with_format-instance_method">
  
    #<strong>parse_time_with_format</strong>(time, format = nil)  &#x21d2; <tt>Time</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a time object created from parsing the string representation of
time given as input</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>time</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a string representation of time for example &#39;today&#39;, &#39;3 days
ago&#39; etc.</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>format</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>nil</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>format of the input string</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a time object created from parsing the string representation of time given
as input</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="pluralize-instance_method">
  
    #<strong>pluralize</strong>(string, count = 2)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns pluralized version of the input string</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>string</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string to be pluralized</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>count</span>
      
      
        <span class='type'>(<tt>Number</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>2</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>optional count number based on which string will be pluralized or
singularized</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>pluralized version of the input string</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="pricify-instance_method">
  
    #<strong>pricify</strong>(amount, currency = &#39;USD&#39;, options = {})  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns formatted price using the global price formatting rules</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>amount</span>
      
      
        <span class='type'>(<tt>Numeric</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>amount to be formatted</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>currency</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;USD&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>currency to be used for formatting</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>formatted price using the global price formatting rules</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="pricify_cents-instance_method">
  
    #<strong>pricify_cents</strong>(amount, currency = &#39;USD&#39;, options = {})  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns formatted price using the global price formatting rules</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>amount</span>
      
      
        <span class='type'>(<tt>Numeric</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>amount in cents to be formatted</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>currency</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;USD&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>currency to be used for formatting</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>formatted price using the global price formatting rules</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="querify-instance_method">
  
    #<strong>querify</strong>(hash)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a query string (e.g. “name=Dan&amp;id=1”) from a given Hash (e.g. {
name: &#39;Dan&#39;, id: 1 })</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>hash</span>
      
      
        <span class='type'>(<tt>Hash{Object =&gt; Object}</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>hash to be “querified”</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a query string (e.g. “name=Dan&amp;id=1”) from a given Hash (e.g. { name:
&#39;Dan&#39;, id: 1 })</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="random_string-instance_method">
  
    #<strong>random_string</strong>(length = 12)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a random alphanumeric string of given length;</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>length</span>
      
      
        <span class='type'>(<tt>Int</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>12</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>how many random characters should be included. Default 12</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns a random alphanumeric string of given length;</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="raw_escape_string-instance_method">
  
    #<strong>raw_escape_string</strong>(value)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns input string HTML-escaped; this will return a string whose HTML
tags will be visible in the browser</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>value</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input string to be HTML-escaped</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input string HTML-escaped; this will return a string whose HTML tags will
be visible in the browser</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="regex_matches-instance_method">
  
    #<strong>regex_matches</strong>(text, regexp)  &#x21d2; <tt>Array&lt;Array&lt;String&gt;&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns matches for the expression in the string; each item in the array is
an array containing all groups matches; for example for the regex (.)(.)
and the text &#39;abcdef&#39;, the result will look like:</p>
<dl class="rdoc-list label-list"><dt>[“a”, “b”], [“c”, “d”], [“e”, “f”]
<dd></dd></dl>


  </div>
</div>
<div class="tags">
  
  <div class="examples">
    <p class="tag_title">Examples:</p>
    
      
      <pre class="example code"><code>To retrieve the URL from a meta tag see the example below:
{% assign text = &#39;&lt;html&gt;&lt;head&gt;&lt;meta property=&quot;og:image&quot; content=&quot;http://somehost.com/someimage.jpg&quot; /&gt;&lt;/head&gt;&lt;body&gt;content&lt;/body&gt;&lt;/html&gt;&#39; | html_safe %}

{% assign matches = text | regex_matches: &#39;&lt;meta\s+property=&quot;og:image&quot;\s+content=&quot;([^&quot;]+)&quot;&#39; %}

{% if matches.size &gt; 0 %}
  {% assign image_path = matches[0][0] %}
  {{ image_path }}
{% endif %}</code></pre>
    
  </div>
<p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
    </li>
  
    <li>
      
        <span class='name'>regexp</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>regexp to use for matching</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Array&lt;String&gt;&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>matches for the expression in the string; each item in the array is an
array containing all groups matches; for example for the regex (.)(.) and
the text &#39;abcdef&#39;, the result will look like:</p>
<dl class="rdoc-list label-list"><dt>[“a”, “b”], [“c”, “d”], [“e”, “f”]
<dd></dd></dl>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="reject-instance_method">
  
    #<strong>reject</strong>(objects, conditions = {})  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns with objects from collection that don&#39;t match provided
conditions</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>objects</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>conditions</span>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>{}</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>hash with conditions { field_name: value }</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>with objects from collection that don&#39;t match provided conditions</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="rotate-instance_method">
  
    #<strong>rotate</strong>(array, count = 1)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns the input array rotated by a number of times given as the second
parameter; [1,2,3,4] rotated by 2 gives [3,4,1,2]</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array to be rotated</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>count</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>1</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>number of times to rotate the input array</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>the input array rotated by a number of times given as the second parameter;
[1,2,3,4] rotated by 2 gives [3,4,1,2]</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="select-instance_method">
  
    #<strong>select</strong>(objects, conditions = {})  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns with objects from collection that matches provided conditions</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>objects</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>conditions</span>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>{}</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>hash with conditions { field_name: value }</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>with objects from collection that matches provided conditions</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="sha1-instance_method">
  
    #<strong>sha1</strong>(object)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns SHA1 digest of the input object</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>object</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input object whose digest we want to obtain</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>SHA1 digest of the input object</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="slugify-instance_method">
  
    #<strong>slugify</strong>(text)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns replaces special characters in a string so that it may be used as
part of a &#39;pretty&#39; URL; e.g. &#39;John arrived_foo&#39; becomes
&#39;john-arrived-foo&#39;</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>input string to be &#39;slugified&#39;</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>replaces special characters in a string so that it may be used as part of a
&#39;pretty&#39; URL; e.g. &#39;John arrived_foo&#39; becomes
&#39;john-arrived-foo&#39;</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="strftime-instance_method">
  
    #<strong>strftime</strong>(date, format, zone = nil)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns formatted representation of the date object; the formatted
representation will be based on what the format parameter specifies</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>date</span>
      
      
        <span class='type'>(<tt>Date</tt>, <tt>Time</tt>, <tt>DateTime</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>date object</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>format</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string representing the desired output format</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>zone</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>nil</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>string representing the time zone e.g. &#39;%Y-%m-%d&#39; will result in
something like &#39;2020-12-12&#39;</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>formatted representation of the date object; the formatted representation
will be based on what the format parameter specifies</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="subtract_array-instance_method">
  
    #<strong>subtract_array</strong>(array, other_array)  &#x21d2; <tt>Array&lt;Object&gt;</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns that is a difference between two arrays</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>other_array</span>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array of objects to be processed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Array&lt;Object&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>that is a difference between two arrays</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="sum_array-instance_method">
  
    #<strong>sum_array</strong>(array)  &#x21d2; <tt>Numeric</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns summarised value of array</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>array</span>
      
      
        <span class='type'>(<tt>Array&lt;Numeric&gt;</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>array with values to be summarised</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Numeric</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>summarised value of array</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="titleize-instance_method">
  
    #<strong>titleize</strong>(text)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns capitalizes all the words and replaces some characters in the
string to create a nicer looking title; it is meant for creating pretty
output</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>text</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>string to be processed</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>capitalizes all the words and replaces some characters in the string to
create a nicer looking title; it is meant for creating pretty output</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_date-instance_method">
  
    #<strong>to_date</strong>(datetime)  &#x21d2; <tt>Date</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a Date object obtained/parsed from the input object</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>datetime</span>
      
      
        <span class='type'>(<tt>Date</tt>, <tt>String</tt>, <tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>object from which we try to obtain/parse a date object</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Date</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a Date object obtained/parsed from the input object</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_hash-instance_method">
  
    #<strong>to_hash</strong>(object)  &#x21d2; <tt>Hash</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns Hash created based on JSON</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>object</span>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>String containing valid JSON</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Hash</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>Hash created based on JSON</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_mobile_number-instance_method">
  
    #<strong>to_mobile_number</strong>(number, country = nil)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns mobile number in E.164 format; recommended for sending sms
notifications</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>number</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>the base part of mobile number</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>country</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>nil</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>country for which country code should be used. Can be anything - full name,
iso2, iso3</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns mobile number in E.164 format; recommended for sending sms
notifications</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_positive_integer-instance_method">
  
    #<strong>to_positive_integer</strong>(param, default)  &#x21d2; <tt>Integer</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    

  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>param</span>
      
      
        <span class='type'>(<tt>Object</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>value to be coerced to posivite integer</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>default</span>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>default value in case param is not valid positive integer</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Integer</tt>)</span>
      
      
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_time-instance_method">
  
    #<strong>to_time</strong>(time, zone = nil)  &#x21d2; <tt>Time</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>16:3 -&gt; 16:03 etc</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>time</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a string representation of time in hours and minutes, like 4:0 -&gt; 4:00</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>zone</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>nil</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>string representing the time zone</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a time object created from time in string</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="to_time_from_str-instance_method">
  
    #<strong>to_time_from_str</strong>(string)  &#x21d2; <tt>Time</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns a Time object obtained/parsed from the input object</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>string</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>object from which we try to obtain/parse a date object</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>Time</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>a Time object obtained/parsed from the input object</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="translate-instance_method">
  
    #<strong>translate</strong>(key, options = {})  &#x21d2; <tt>String</tt> 
  

  
    <span class="aliases">Also known as:
    <span class="names"><span id='t-instance_method'>t</span></span>
    </span>
  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns translation value taken from translations for the key given as
parameter</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>key</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>translation key</p>
</div>
      
    </li>
  
    <li>
      
        <span class='name'>options</span>
      
      
        <span class='type'>(<tt>Hash{String =&gt; String}</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>{}</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>values passed to translation string</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>translation value taken from translations for the key given as parameter</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="url_for_path_with_token-instance_method">
  
    #<strong>url_for_path_with_token</strong>(path, user)  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>e.g: &#39;/account&#39; | url_for_with_token: current_user generates <a
href="https://example.com/account?temporary_token=TOKEN_HERE">example.com/account?temporary_token=TOKEN_HERE</a></p>


  </div>
</div>
<div class="tags">
  
<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>returns a url for the given page slug, which includes user temporary token;</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="video_params-instance_method">
  
    #<strong>video_params</strong>(url)  &#x21d2; <tt>Object</tt> 
  

  

  
</h3>
  {% endraw %}
</div>

    
      <div class="method_details ">
  {% raw %}
    <h3 class="signature " id="videoify-instance_method">
  
    #<strong>videoify</strong>(url = &#39;&#39;, options = {})  &#x21d2; <tt>String</tt> 
  

  

  
</h3><div class="docstring">
  <div class="discussion">
    
<p>Returns if the given url is supported, an HTML formatted string containing
a video player (inside an iframe) which will play the video at the given
url; otherwise an empty string is returned</p>


  </div>
</div>
<div class="tags">
  <p class="tag_title">Parameters:</p>
<ul class="param">
  
    <li>
      
        <span class='name'>url</span>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
        <em class="default">(defaults to: <tt>&#39;&#39;</tt>)</em>
      
      
        &mdash;
        <div class='inline'>
<p>url to a video on the internet</p>
</div>
      
    </li>
  
</ul>

<p class="tag_title">Returns:</p>
<ul class="return">
  
    <li>
      
      
        <span class='type'>(<tt>String</tt>)</span>
      
      
      
        &mdash;
        <div class='inline'>
<p>if the given url is supported, an HTML formatted string containing a video
player (inside an iframe) which will play the video at the given url;
otherwise an empty string is returned</p>
</div>
      
    </li>
  
</ul>

</div>
  {% endraw %}
</div>

    
  </div>

</div>
