---
converter: markdown
metadata:
  title: Layouts
slug: get-started/pages/layouts
---

**Layout** is a special kind of Liquid view that stores code that would normally repeat on a lot of pages, and is surrounding page content.

Without the layout, each single page would need to share a lot of duplicated code. Changing anything would be very time consuming and error prone.

Using layouts, you can extract the common elements of many pages to one place. Usually, layout is the very first thing you want to develop.

## Layouts directory

All layouts should be located in the `views/layouts` directory. By default, all Pages use the layout called `application`, but you can create as many layouts as needed, and decide which page uses which layout. This is why the very first layout should be named `views/layouts/application.html.liquid`.

## Minimal example

At a minimum, the content of the layout should look like this:

{% raw %}

<pre>
  <code class="language-liquid">
    {{ content_for_layout }}
  </code>
</pre>

{% endraw %}

This layout only renders the content of the page, and is equivalent of passing `layout_name: ''` in the page definition.

## Usual example

The most common use case of layouts is to place something before and after the content of the page:

{% raw %}

<pre>
  <code class="language-html">
    &lt;!doctype html&gt;
    &lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
      &lt;!-- here come things like meta tags, favicon, css etc. --&gt;
    &lt;/head&gt;

    &lt;body&gt;
      &lt;header&gt;here usually come header, navbar etc.&lt;/header&gt;

      &lt;main&gt;
        {{ content_for_layout }}
      &lt;/main&gt;

      &lt;footer&gt;
        here usually come footer, js etc.
      &lt;/footer&gt;
    &lt;/body&gt;
    &lt;/html&gt;
  </code>
</pre>

{% endraw %}

### Layouts for different formats

If you want to have layouts for your non-html pages, just put `.<format>` before the file extension.

Examples:

* document.pdf.liquid
* document.csv.liquid
* layout.xml.liquid
* email.txt.liquid
* email.html.liquid

In the page `my-example-page.pdf.liquid` you will put `layout_name: document` and it will recognize which layout to use (the same as the format of the page).

### Rendering page content in layout

The most important part in every layout file is the {%raw%}`{{ content_for_layout }}`{%endraw%} line: it injects the content of the page into the layout.

## Related topics
* [Pages](/get-started/pages/pages)
* [Creating a Layout](/get-started/pages/creating-layout)
