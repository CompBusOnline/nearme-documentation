---
converter: markdown
metadata:
  title: Send binary file via api notification
  description: This guide will help you send file using api call notification.
slug: how-to/apis/send-binary-file-via-api-notification
searchable: true
---

This guide This guide will help you send file using api call notification.

## Requirements
This is an advanced tutorial. To follow it, you should be familiar with basic Platform OS concepts, HTML, Liquid, APIs and Form Configurations, and the topics in the Get Started section, especially tutorials related to Notifications.

* [How Platform OS Works](/how-platformos-works)
* [APIs and Form Configurations](/api-reference)
* [Get Started: Creating an API Call Notification](/get-started/notifications/creating-api-call-notification)

## Steps

Sending binary file via api notification is a special case of creating regular api call notification as described in [Get Started: Creating an API Call Notification](/get-started/notifications/creating-api-call-notification). This how to will describe the difference between regular request and sending a file

1. Create API call notification

### Step 1: Create API call notification

Create an API call notification `notifications/api_call_notifications/send_file.liquid`:

```liquid
{% raw %}
---
name: send_file
to: 'https://example.com/endpoint'
delay: 0
enabled: true
format: http
trigger_condition: true
request_type: post_multipart
---
{
  "file": {
    "url": "https://domain.com/my-file.jpg",
    "name": "my-file.jpg",
    "content_type": "image/jpeg"
  },
  "file2": {
    "url": "https://domain.com/other-file.jpg",
    "name": "other-file.jpg",
    "content_type": "image/jpeg"
  }
}
{% endraw %}
```

This defines a POST request to the endpoint, which would send two binary files. The main difference between regular api call and sending binary file is the `_multipart` suffix in request type. Valid request types are `post_multipart`, `patch_multipart` and `put_multipart`. The required body format for `*_multipart` requests is json following structure:
```json
{% raw %}
{
  "<param name>": {
    "url": "<required url to file remote location>",
    "name": "<optional file name>",
    "content_type": "<optional content type>"
  }
}
{% endraw %}

```

{% include 'alert/warning', content: 'If url includes special characters, like for example & [which is the case for custom_attachment.url] please make sure to use `html_safe` filter.' %}

{% include 'shared/questions_section' %}
